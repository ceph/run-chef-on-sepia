#!/usr/bin/python
import argparse
import os
import re
import subprocess
import sys
import tempfile
import yaml


def parse_args():
    parser = argparse.ArgumentParser(
        description='Create Chef server node',
        )
    parser.add_argument(
        'uri',
        metavar='URI',
        help='libvirt URI to connect to',
        )
    parser.add_argument(
        'name',
        metavar='NAME',
        help='unique name to give this Chef setup',
        )
    args = parser.parse_args()
    CHEF_NAME_RE = re.compile('^[a-z][a-z0-9-]*$')
    if not CHEF_NAME_RE.match(args.name):
        parser.error(
            'Name must be alphanumeric and dashes'
            + ' and start with alpha: {name!r}'.format(
                name=args.name,
                ),
            )
    return args


def main():
    args = parse_args()

    hostname = 'chef-{name}-server'.format(
        name=args.name,
        )

    meta = []

    install_path = os.path.join(
        os.path.dirname(__file__),
        'data',
        'install-chef-server',
        )
    with file(install_path, 'rb') as f:
        meta.append(f.read())

    with tempfile.NamedTemporaryFile(
        suffix='.user.yaml',
        ) as meta_fp:
        meta_fp.write('#cloud-config-archive\n\n')
        yaml.safe_dump(
            data=meta,
            stream=meta_fp,
            )
        meta_fp.seek(0)
        meta_fp.flush()
        subprocess.check_call(
            args=[
                'downburst',
                '--connect={uri}'.format(uri=args.uri),
                'create',
                '--user-data={path}'.format(
                    path=os.path.join(
                        os.path.dirname(__file__),
                        'data',
                        'chef-server.user.yaml',
                        ),
                    ),
                '--meta-data={path}'.format(
                    path=os.path.join(
                        os.path.dirname(__file__),
                        'data',
                        'chef-server.meta.yaml',
                        ),
                    ),
                '--user-data={path}'.format(
                    path=meta_fp.name,
                    ),
                '--',
                hostname,
                ],
            )

    print 'Your Chef server vm is currently installing at'
    print
    print '  ssh ubuntu@{hostname}.front.sepia.ceph.com'.format(
                hostname=hostname,
                )
    print
    print 'and you can monitor the Chef install progress with'
    print
    print '  tail -f /var/log/cloud-init-output.log'
    print
    print '(the DNS name will work only after DHCP has completed)'

if __name__ == '__main__':
    sys.exit(main())
